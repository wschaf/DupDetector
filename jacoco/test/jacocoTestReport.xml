<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="DupDetector"><sessioninfo id="fv-az33-360-4a4e9b5" start="1637437545272" dump="1637437546750"/><package name="edu/odu/cs/cs350"><class name="edu/odu/cs/cs350/Recommender" sourcefilename="Recommender.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;II)V" line="31"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTokens" desc="(Ljava/util/List;)V" line="42"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMinSublistSize" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinSublistSize" desc="()I" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMaxSublistSize" desc="(I)V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxSublistSize" desc="()I" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTokens" desc="()Ljava/util/List;" line="85"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecommendations" desc="()Ljava/util/List;" line="95"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Sort" desc="()V" line="140"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeOpportunity" desc="(Ljava/util/List;Ljava/util/List;)I" line="154"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCandidate" desc="(Ljava/util/List;)Z" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSublists" desc="(ILjava/util/List;)Ljava/util/List;" line="176"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/odu/cs/cs350/Token" sourcefilename="Token.java"><method name="&lt;init&gt;" desc="(Ledu/odu/cs/cs350/TokenType;II)V" line="24"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ledu/odu/cs/cs350/TokenType;IILjava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenType" desc="()Ledu/odu/cs/cs350/TokenType;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLexeme" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineNumber" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumnNumber" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="44"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/odu/cs/cs350/DupDetector" sourcefilename="DupDetector.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/odu/cs/cs350/Output" sourcefilename="Output.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/util/List;Ljava/util/List;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRefactoringsToPrint" desc="()I" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRefactoringsToPrint" desc="(I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFiles" desc="()Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFiles" desc="(Ljava/util/List;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRefactorings" desc="()Ljava/util/List;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRefactorings" desc="(Ljava/util/List;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSectionOne" desc="()Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSectionTwo" desc="()Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompleteOutput" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="299"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="63"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/odu/cs/cs350/LexerAnalyzer" sourcefilename="LexerAnalyzer.java"><method name="zzUnpackcmap_top" desc="()[I" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackcmap_top" desc="(Ljava/lang/String;I[I)I" line="76"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackcmap_blocks" desc="()[I" line="310"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackcmap_blocks" desc="(Ljava/lang/String;I[I)I" line="317"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackAction" desc="()[I" line="353"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackAction" desc="(Ljava/lang/String;I[I)I" line="360"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackRowMap" desc="()[I" line="410"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackRowMap" desc="(Ljava/lang/String;I[I)I" line="417"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackTrans" desc="()[I" line="629"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackTrans" desc="(Ljava/lang/String;I[I)I" line="636"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackAttribute" desc="()[I" line="680"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzUnpackAttribute" desc="(Ljava/lang/String;I[I)I" line="687"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symbol" desc="(Ledu/odu/cs/cs350/TokenType;)Ledu/odu/cs/cs350/Token;" line="761"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symbol" desc="(Ledu/odu/cs/cs350/TokenType;Ljava/lang/String;)Ledu/odu/cs/cs350/Token;" line="765"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="705"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzCMap" desc="(I)I" line="783"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zzRefill" desc="()Z" line="796"><counter type="INSTRUCTION" missed="68" covered="98"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yyclose" desc="()V" line="859"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yyreset" desc="(Ljava/io/Reader;)V" line="881"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yyResetPosition" desc="()V" line="894"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yyatEOF" desc="()Z" line="913"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yystate" desc="()I" line="923"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yybegin" desc="(I)V" line="933"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yytext" desc="()Ljava/lang/String;" line="943"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yycharat" desc="(I)C" line="957"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yylength" desc="()I" line="967"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zzScanError" desc="(I)V" line="988"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yypushback" desc="(I)V" line="1006"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="yylex" desc="()Ledu/odu/cs/cs350/Token;" line="1029"><counter type="INSTRUCTION" missed="475" covered="313"/><counter type="BRANCH" missed="182" covered="46"/><counter type="LINE" missed="184" covered="82"/><counter type="COMPLEXITY" missed="176" covered="32"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="666" covered="796"/><counter type="BRANCH" missed="196" covered="76"/><counter type="LINE" missed="233" covered="200"/><counter type="COMPLEXITY" missed="194" covered="65"/><counter type="METHOD" missed="9" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/odu/cs/cs350/TokenType" sourcefilename="TokenType.java"><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="804"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="804"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/odu/cs/cs350/TokenAnalyzer" sourcefilename="TokenAnalyzer.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processSourceCode" desc="()V" line="46"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileTokenCount" desc="()I" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="75"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/odu/cs/cs350/RecursiveSearch" sourcefilename="RecursiveSearch.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="searchDirectory" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/odu/cs/cs350/Refactoring" sourcefilename="Refactoring.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;)V" line="21"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;I)V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfTokens" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAbsolutePath" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLineNumber" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColumnNumber" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTokenList" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Ledu/odu/cs/cs350/Refactoring;)I" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/odu/cs/cs350/File" sourcefilename="File.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAbsolutePath" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAbsolutePath" desc="(Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfTokens" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNumberOfTokens" desc="(I)V" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getData" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setData" desc="(Ljava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Refactoring.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="8" ci="0" mb="0" cb="0"/><line nr="25" mi="8" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="File.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RecursiveSearch.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="16" ci="0" mb="2" cb="0"/><line nr="23" mi="3" ci="0" mb="2" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="10" ci="0" mb="4" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Token.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="2" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="44"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LexerAnalyzer.java"><line nr="37" mi="0" ci="19" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="2"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="8" mb="0" cb="2"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="2"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="0" cb="2"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="0" ci="3" mb="0" cb="2"/><line nr="421" mi="0" ci="7" mb="0" cb="0"/><line nr="422" mi="0" ci="10" mb="0" cb="0"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="630" mi="0" ci="2" mb="0" cb="0"/><line nr="631" mi="0" ci="5" mb="0" cb="0"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="638" mi="0" ci="3" mb="0" cb="0"/><line nr="639" mi="0" ci="3" mb="0" cb="2"/><line nr="640" mi="0" ci="5" mb="0" cb="0"/><line nr="641" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="1" mb="0" cb="0"/><line nr="643" mi="0" ci="8" mb="0" cb="2"/><line nr="644" mi="0" ci="1" mb="0" cb="0"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="660" mi="0" ci="15" mb="0" cb="0"/><line nr="669" mi="0" ci="3" mb="0" cb="0"/><line nr="680" mi="0" ci="3" mb="0" cb="0"/><line nr="681" mi="0" ci="2" mb="0" cb="0"/><line nr="682" mi="0" ci="5" mb="0" cb="0"/><line nr="683" mi="0" ci="2" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="688" mi="0" ci="2" mb="0" cb="0"/><line nr="689" mi="0" ci="3" mb="0" cb="0"/><line nr="690" mi="0" ci="3" mb="0" cb="2"/><line nr="691" mi="0" ci="5" mb="0" cb="0"/><line nr="692" mi="0" ci="5" mb="0" cb="0"/><line nr="693" mi="0" ci="8" mb="0" cb="2"/><line nr="694" mi="0" ci="1" mb="0" cb="0"/><line nr="695" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="737" mi="0" ci="3" mb="0" cb="0"/><line nr="750" mi="0" ci="3" mb="0" cb="0"/><line nr="758" mi="0" ci="5" mb="0" cb="0"/><line nr="761" mi="0" ci="13" mb="0" cb="0"/><line nr="765" mi="0" ci="14" mb="0" cb="0"/><line nr="775" mi="0" ci="2" mb="0" cb="0"/><line nr="776" mi="0" ci="3" mb="0" cb="0"/><line nr="777" mi="0" ci="1" mb="0" cb="0"/><line nr="783" mi="0" ci="4" mb="0" cb="0"/><line nr="784" mi="9" ci="8" mb="1" cb="1"/><line nr="796" mi="0" ci="3" mb="0" cb="2"/><line nr="797" mi="0" ci="7" mb="0" cb="0"/><line nr="798" mi="0" ci="3" mb="0" cb="0"/><line nr="799" mi="0" ci="13" mb="0" cb="0"/><line nr="804" mi="0" ci="7" mb="0" cb="0"/><line nr="805" mi="0" ci="7" mb="0" cb="0"/><line nr="806" mi="0" ci="7" mb="0" cb="0"/><line nr="807" mi="0" ci="3" mb="0" cb="0"/><line nr="811" mi="0" ci="9" mb="1" cb="1"/><line nr="813" mi="7" ci="0" mb="0" cb="0"/><line nr="814" mi="9" ci="0" mb="0" cb="0"/><line nr="815" mi="3" ci="0" mb="0" cb="0"/><line nr="816" mi="7" ci="0" mb="0" cb="0"/><line nr="817" mi="3" ci="0" mb="0" cb="0"/><line nr="821" mi="0" ci="7" mb="0" cb="0"/><line nr="822" mi="0" ci="9" mb="0" cb="0"/><line nr="825" mi="0" ci="2" mb="1" cb="1"/><line nr="826" mi="5" ci="0" mb="0" cb="0"/><line nr="829" mi="0" ci="2" mb="0" cb="2"/><line nr="830" mi="0" ci="6" mb="0" cb="0"/><line nr="831" mi="0" ci="9" mb="1" cb="1"/><line nr="832" mi="3" ci="0" mb="2" cb="0"/><line nr="833" mi="6" ci="0" mb="0" cb="0"/><line nr="834" mi="4" ci="0" mb="0" cb="0"/><line nr="836" mi="4" ci="0" mb="0" cb="0"/><line nr="837" mi="3" ci="0" mb="2" cb="0"/><line nr="838" mi="2" ci="0" mb="0" cb="0"/><line nr="840" mi="12" ci="0" mb="0" cb="0"/><line nr="845" mi="0" ci="2" mb="0" cb="0"/><line nr="849" mi="0" ci="2" mb="0" cb="0"/><line nr="859" mi="3" ci="0" mb="0" cb="0"/><line nr="860" mi="4" ci="0" mb="0" cb="0"/><line nr="862" mi="3" ci="0" mb="2" cb="0"/><line nr="863" mi="3" ci="0" mb="0" cb="0"/><line nr="865" mi="1" ci="0" mb="0" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="882" mi="3" ci="0" mb="0" cb="0"/><line nr="883" mi="2" ci="0" mb="0" cb="0"/><line nr="884" mi="3" ci="0" mb="0" cb="0"/><line nr="885" mi="5" ci="0" mb="2" cb="0"/><line nr="886" mi="4" ci="0" mb="0" cb="0"/><line nr="888" mi="1" ci="0" mb="0" cb="0"/><line nr="894" mi="3" ci="0" mb="0" cb="0"/><line nr="895" mi="3" ci="0" mb="0" cb="0"/><line nr="896" mi="3" ci="0" mb="0" cb="0"/><line nr="897" mi="3" ci="0" mb="0" cb="0"/><line nr="898" mi="3" ci="0" mb="0" cb="0"/><line nr="899" mi="3" ci="0" mb="0" cb="0"/><line nr="900" mi="3" ci="0" mb="0" cb="0"/><line nr="901" mi="3" ci="0" mb="0" cb="0"/><line nr="902" mi="3" ci="0" mb="0" cb="0"/><line nr="903" mi="3" ci="0" mb="0" cb="0"/><line nr="904" mi="1" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="0" cb="0"/><line nr="923" mi="3" ci="0" mb="0" cb="0"/><line nr="933" mi="0" ci="3" mb="0" cb="0"/><line nr="934" mi="0" ci="1" mb="0" cb="0"/><line nr="943" mi="0" ci="13" mb="0" cb="0"/><line nr="957" mi="8" ci="0" mb="0" cb="0"/><line nr="967" mi="6" ci="0" mb="0" cb="0"/><line nr="988" mi="4" ci="0" mb="0" cb="0"/><line nr="989" mi="1" ci="0" mb="0" cb="0"/><line nr="990" mi="4" ci="0" mb="0" cb="0"/><line nr="991" mi="1" ci="0" mb="0" cb="0"/><line nr="993" mi="5" ci="0" mb="0" cb="0"/><line nr="1006" mi="4" ci="0" mb="2" cb="0"/><line nr="1007" mi="2" ci="0" mb="0" cb="0"/><line nr="1009" mi="6" ci="0" mb="0" cb="0"/><line nr="1010" mi="1" ci="0" mb="0" cb="0"/><line nr="1029" mi="0" ci="3" mb="0" cb="0"/><line nr="1030" mi="0" ci="3" mb="0" cb="0"/><line nr="1032" mi="0" ci="2" mb="0" cb="0"/><line nr="1033" mi="0" ci="2" mb="0" cb="0"/><line nr="1034" mi="0" ci="2" mb="0" cb="0"/><line nr="1037" mi="0" ci="3" mb="0" cb="0"/><line nr="1039" mi="0" ci="2" mb="0" cb="0"/><line nr="1042" mi="0" ci="3" mb="0" cb="0"/><line nr="1043" mi="0" ci="3" mb="0" cb="2"/><line nr="1044" mi="0" ci="5" mb="0" cb="0"/><line nr="1045" mi="0" ci="5" mb="0" cb="0"/><line nr="1046" mi="0" ci="3" mb="0" cb="0"/><line nr="1047" mi="0" ci="2" mb="2" cb="2"/><line nr="1053" mi="6" ci="0" mb="0" cb="0"/><line nr="1054" mi="3" ci="0" mb="0" cb="0"/><line nr="1055" mi="2" ci="0" mb="0" cb="0"/><line nr="1056" mi="1" ci="0" mb="0" cb="0"/><line nr="1058" mi="6" ci="0" mb="0" cb="0"/><line nr="1059" mi="3" ci="0" mb="0" cb="0"/><line nr="1060" mi="2" ci="0" mb="0" cb="0"/><line nr="1061" mi="1" ci="0" mb="0" cb="0"/><line nr="1063" mi="0" ci="2" mb="1" cb="1"/><line nr="1064" mi="3" ci="0" mb="0" cb="0"/><line nr="1066" mi="0" ci="6" mb="0" cb="0"/><line nr="1067" mi="0" ci="3" mb="0" cb="0"/><line nr="1069" mi="0" ci="1" mb="0" cb="0"/><line nr="1071" mi="0" ci="2" mb="0" cb="0"/><line nr="1072" mi="0" ci="6" mb="0" cb="0"/><line nr="1076" mi="0" ci="2" mb="1" cb="1"/><line nr="1080" mi="3" ci="0" mb="2" cb="0"/><line nr="1081" mi="10" ci="0" mb="2" cb="0"/><line nr="1082" mi="3" ci="0" mb="2" cb="0"/><line nr="1083" mi="3" ci="0" mb="0" cb="0"/><line nr="1085" mi="3" ci="0" mb="0" cb="0"/><line nr="1086" mi="3" ci="0" mb="0" cb="0"/><line nr="1087" mi="3" ci="0" mb="0" cb="0"/><line nr="1088" mi="3" ci="0" mb="0" cb="0"/><line nr="1089" mi="2" ci="0" mb="2" cb="0"/><line nr="1090" mi="3" ci="0" mb="0" cb="0"/><line nr="1092" mi="9" ci="0" mb="2" cb="0"/><line nr="1094" mi="8" ci="0" mb="2" cb="0"/><line nr="1096" mi="0" ci="2" mb="0" cb="0"/><line nr="1098" mi="0" ci="8" mb="0" cb="0"/><line nr="1100" mi="0" ci="6" mb="0" cb="0"/><line nr="1103" mi="0" ci="5" mb="0" cb="0"/><line nr="1104" mi="0" ci="5" mb="1" cb="1"/><line nr="1105" mi="3" ci="0" mb="0" cb="0"/><line nr="1112" mi="0" ci="3" mb="0" cb="2"/><line nr="1113" mi="0" ci="5" mb="0" cb="0"/><line nr="1114" mi="0" ci="6" mb="0" cb="0"/><line nr="1116" mi="0" ci="3" mb="1" cb="1"/><line nr="1117" mi="2" ci="0" mb="0" cb="0"/><line nr="1118" mi="1" ci="0" mb="0" cb="0"/><line nr="1122" mi="0" ci="3" mb="0" cb="0"/><line nr="1123" mi="0" ci="3" mb="0" cb="0"/><line nr="1124" mi="0" ci="3" mb="0" cb="0"/><line nr="1126" mi="0" ci="3" mb="0" cb="0"/><line nr="1127" mi="0" ci="3" mb="0" cb="0"/><line nr="1128" mi="0" ci="3" mb="0" cb="0"/><line nr="1129" mi="0" ci="3" mb="0" cb="0"/><line nr="1130" mi="0" ci="2" mb="0" cb="2"/><line nr="1131" mi="0" ci="2" mb="0" cb="0"/><line nr="1132" mi="0" ci="1" mb="0" cb="0"/><line nr="1135" mi="0" ci="5" mb="0" cb="0"/><line nr="1136" mi="0" ci="5" mb="0" cb="0"/><line nr="1139" mi="0" ci="10" mb="0" cb="0"/><line nr="1140" mi="0" ci="4" mb="0" cb="2"/><line nr="1141" mi="0" ci="3" mb="0" cb="0"/><line nr="1143" mi="0" ci="5" mb="0" cb="0"/><line nr="1144" mi="0" ci="5" mb="0" cb="2"/><line nr="1145" mi="0" ci="3" mb="0" cb="0"/><line nr="1146" mi="0" ci="2" mb="0" cb="0"/><line nr="1147" mi="0" ci="6" mb="0" cb="2"/><line nr="1150" mi="0" ci="1" mb="0" cb="0"/><line nr="1154" mi="0" ci="3" mb="0" cb="0"/><line nr="1156" mi="0" ci="8" mb="1" cb="3"/><line nr="1157" mi="0" ci="3" mb="0" cb="0"/><line nr="1159" mi="0" ci="4" mb="0" cb="0"/><line nr="1163" mi="2" ci="6" mb="163" cb="25"/><line nr="1165" mi="11" ci="0" mb="0" cb="0"/><line nr="1169" mi="1" ci="0" mb="0" cb="0"/><line nr="1174" mi="0" ci="1" mb="0" cb="0"/><line nr="1176" mi="4" ci="0" mb="0" cb="0"/><line nr="1179" mi="1" ci="0" mb="0" cb="0"/><line nr="1181" mi="0" ci="7" mb="0" cb="0"/><line nr="1184" mi="0" ci="1" mb="0" cb="0"/><line nr="1186" mi="0" ci="4" mb="0" cb="0"/><line nr="1189" mi="1" ci="0" mb="0" cb="0"/><line nr="1191" mi="0" ci="6" mb="0" cb="0"/><line nr="1194" mi="1" ci="0" mb="0" cb="0"/><line nr="1196" mi="4" ci="0" mb="0" cb="0"/><line nr="1199" mi="1" ci="0" mb="0" cb="0"/><line nr="1201" mi="4" ci="0" mb="0" cb="0"/><line nr="1204" mi="1" ci="0" mb="0" cb="0"/><line nr="1206" mi="0" ci="4" mb="0" cb="0"/><line nr="1209" mi="1" ci="0" mb="0" cb="0"/><line nr="1211" mi="0" ci="4" mb="0" cb="0"/><line nr="1214" mi="1" ci="0" mb="0" cb="0"/><line nr="1216" mi="4" ci="0" mb="0" cb="0"/><line nr="1219" mi="1" ci="0" mb="0" cb="0"/><line nr="1221" mi="4" ci="0" mb="0" cb="0"/><line nr="1224" mi="1" ci="0" mb="0" cb="0"/><line nr="1226" mi="4" ci="0" mb="0" cb="0"/><line nr="1229" mi="1" ci="0" mb="0" cb="0"/><line nr="1231" mi="4" ci="0" mb="0" cb="0"/><line nr="1234" mi="1" ci="0" mb="0" cb="0"/><line nr="1236" mi="4" ci="0" mb="0" cb="0"/><line nr="1239" mi="1" ci="0" mb="0" cb="0"/><line nr="1241" mi="4" ci="0" mb="0" cb="0"/><line nr="1244" mi="1" ci="0" mb="0" cb="0"/><line nr="1246" mi="0" ci="6" mb="0" cb="0"/><line nr="1249" mi="1" ci="0" mb="0" cb="0"/><line nr="1251" mi="4" ci="0" mb="0" cb="0"/><line nr="1254" mi="1" ci="0" mb="0" cb="0"/><line nr="1256" mi="0" ci="4" mb="0" cb="0"/><line nr="1259" mi="1" ci="0" mb="0" cb="0"/><line nr="1261" mi="0" ci="4" mb="0" cb="0"/><line nr="1264" mi="1" ci="0" mb="0" cb="0"/><line nr="1266" mi="4" ci="0" mb="0" cb="0"/><line nr="1269" mi="1" ci="0" mb="0" cb="0"/><line nr="1271" mi="0" ci="4" mb="0" cb="0"/><line nr="1274" mi="1" ci="0" mb="0" cb="0"/><line nr="1276" mi="4" ci="0" mb="0" cb="0"/><line nr="1279" mi="1" ci="0" mb="0" cb="0"/><line nr="1281" mi="4" ci="0" mb="0" cb="0"/><line nr="1284" mi="1" ci="0" mb="0" cb="0"/><line nr="1286" mi="4" ci="0" mb="0" cb="0"/><line nr="1289" mi="1" ci="0" mb="0" cb="0"/><line nr="1291" mi="4" ci="0" mb="0" cb="0"/><line nr="1294" mi="1" ci="0" mb="0" cb="0"/><line nr="1296" mi="0" ci="4" mb="0" cb="0"/><line nr="1299" mi="1" ci="0" mb="0" cb="0"/><line nr="1301" mi="0" ci="4" mb="0" cb="0"/><line nr="1304" mi="1" ci="0" mb="0" cb="0"/><line nr="1306" mi="4" ci="0" mb="0" cb="0"/><line nr="1309" mi="1" ci="0" mb="0" cb="0"/><line nr="1311" mi="0" ci="6" mb="0" cb="0"/><line nr="1314" mi="0" ci="1" mb="0" cb="0"/><line nr="1316" mi="5" ci="0" mb="0" cb="0"/><line nr="1319" mi="1" ci="0" mb="0" cb="0"/><line nr="1321" mi="0" ci="10" mb="0" cb="0"/><line nr="1324" mi="1" ci="0" mb="0" cb="0"/><line nr="1326" mi="4" ci="0" mb="0" cb="0"/><line nr="1329" mi="1" ci="0" mb="0" cb="0"/><line nr="1331" mi="4" ci="0" mb="0" cb="0"/><line nr="1334" mi="1" ci="0" mb="0" cb="0"/><line nr="1336" mi="4" ci="0" mb="0" cb="0"/><line nr="1339" mi="1" ci="0" mb="0" cb="0"/><line nr="1341" mi="4" ci="0" mb="0" cb="0"/><line nr="1344" mi="1" ci="0" mb="0" cb="0"/><line nr="1346" mi="4" ci="0" mb="0" cb="0"/><line nr="1349" mi="1" ci="0" mb="0" cb="0"/><line nr="1351" mi="0" ci="4" mb="0" cb="0"/><line nr="1354" mi="1" ci="0" mb="0" cb="0"/><line nr="1356" mi="4" ci="0" mb="0" cb="0"/><line nr="1359" mi="1" ci="0" mb="0" cb="0"/><line nr="1361" mi="4" ci="0" mb="0" cb="0"/><line nr="1364" mi="1" ci="0" mb="0" cb="0"/><line nr="1366" mi="4" ci="0" mb="0" cb="0"/><line nr="1369" mi="1" ci="0" mb="0" cb="0"/><line nr="1371" mi="4" ci="0" mb="0" cb="0"/><line nr="1374" mi="1" ci="0" mb="0" cb="0"/><line nr="1376" mi="4" ci="0" mb="0" cb="0"/><line nr="1379" mi="1" ci="0" mb="0" cb="0"/><line nr="1381" mi="4" ci="0" mb="0" cb="0"/><line nr="1384" mi="1" ci="0" mb="0" cb="0"/><line nr="1386" mi="4" ci="0" mb="0" cb="0"/><line nr="1389" mi="1" ci="0" mb="0" cb="0"/><line nr="1391" mi="7" ci="0" mb="0" cb="0"/><line nr="1394" mi="1" ci="0" mb="0" cb="0"/><line nr="1396" mi="5" ci="0" mb="0" cb="0"/><line nr="1399" mi="1" ci="0" mb="0" cb="0"/><line nr="1401" mi="5" ci="0" mb="0" cb="0"/><line nr="1404" mi="1" ci="0" mb="0" cb="0"/><line nr="1406" mi="5" ci="0" mb="0" cb="0"/><line nr="1409" mi="1" ci="0" mb="0" cb="0"/><line nr="1411" mi="5" ci="0" mb="0" cb="0"/><line nr="1414" mi="1" ci="0" mb="0" cb="0"/><line nr="1416" mi="5" ci="0" mb="0" cb="0"/><line nr="1419" mi="1" ci="0" mb="0" cb="0"/><line nr="1421" mi="5" ci="0" mb="0" cb="0"/><line nr="1424" mi="1" ci="0" mb="0" cb="0"/><line nr="1426" mi="5" ci="0" mb="0" cb="0"/><line nr="1429" mi="1" ci="0" mb="0" cb="0"/><line nr="1431" mi="5" ci="0" mb="0" cb="0"/><line nr="1434" mi="1" ci="0" mb="0" cb="0"/><line nr="1436" mi="4" ci="0" mb="0" cb="0"/><line nr="1439" mi="1" ci="0" mb="0" cb="0"/><line nr="1441" mi="4" ci="0" mb="0" cb="0"/><line nr="1444" mi="1" ci="0" mb="0" cb="0"/><line nr="1446" mi="0" ci="4" mb="0" cb="0"/><line nr="1449" mi="1" ci="0" mb="0" cb="0"/><line nr="1451" mi="4" ci="0" mb="0" cb="0"/><line nr="1454" mi="1" ci="0" mb="0" cb="0"/><line nr="1456" mi="0" ci="4" mb="0" cb="0"/><line nr="1459" mi="1" ci="0" mb="0" cb="0"/><line nr="1461" mi="4" ci="0" mb="0" cb="0"/><line nr="1464" mi="1" ci="0" mb="0" cb="0"/><line nr="1466" mi="4" ci="0" mb="0" cb="0"/><line nr="1469" mi="1" ci="0" mb="0" cb="0"/><line nr="1471" mi="0" ci="4" mb="0" cb="0"/><line nr="1474" mi="1" ci="0" mb="0" cb="0"/><line nr="1476" mi="4" ci="0" mb="0" cb="0"/><line nr="1479" mi="1" ci="0" mb="0" cb="0"/><line nr="1481" mi="0" ci="4" mb="0" cb="0"/><line nr="1484" mi="1" ci="0" mb="0" cb="0"/><line nr="1486" mi="4" ci="0" mb="0" cb="0"/><line nr="1489" mi="1" ci="0" mb="0" cb="0"/><line nr="1491" mi="4" ci="0" mb="0" cb="0"/><line nr="1494" mi="1" ci="0" mb="0" cb="0"/><line nr="1496" mi="4" ci="0" mb="0" cb="0"/><line nr="1499" mi="1" ci="0" mb="0" cb="0"/><line nr="1501" mi="4" ci="0" mb="0" cb="0"/><line nr="1504" mi="1" ci="0" mb="0" cb="0"/><line nr="1506" mi="4" ci="0" mb="0" cb="0"/><line nr="1509" mi="1" ci="0" mb="0" cb="0"/><line nr="1511" mi="4" ci="0" mb="0" cb="0"/><line nr="1514" mi="1" ci="0" mb="0" cb="0"/><line nr="1516" mi="4" ci="0" mb="0" cb="0"/><line nr="1519" mi="1" ci="0" mb="0" cb="0"/><line nr="1521" mi="4" ci="0" mb="0" cb="0"/><line nr="1524" mi="1" ci="0" mb="0" cb="0"/><line nr="1526" mi="4" ci="0" mb="0" cb="0"/><line nr="1529" mi="1" ci="0" mb="0" cb="0"/><line nr="1531" mi="4" ci="0" mb="0" cb="0"/><line nr="1534" mi="1" ci="0" mb="0" cb="0"/><line nr="1536" mi="0" ci="4" mb="0" cb="0"/><line nr="1539" mi="1" ci="0" mb="0" cb="0"/><line nr="1541" mi="4" ci="0" mb="0" cb="0"/><line nr="1544" mi="1" ci="0" mb="0" cb="0"/><line nr="1546" mi="4" ci="0" mb="0" cb="0"/><line nr="1549" mi="1" ci="0" mb="0" cb="0"/><line nr="1551" mi="4" ci="0" mb="0" cb="0"/><line nr="1554" mi="1" ci="0" mb="0" cb="0"/><line nr="1556" mi="4" ci="0" mb="0" cb="0"/><line nr="1559" mi="1" ci="0" mb="0" cb="0"/><line nr="1561" mi="4" ci="0" mb="0" cb="0"/><line nr="1564" mi="1" ci="0" mb="0" cb="0"/><line nr="1566" mi="0" ci="4" mb="0" cb="0"/><line nr="1569" mi="1" ci="0" mb="0" cb="0"/><line nr="1571" mi="4" ci="0" mb="0" cb="0"/><line nr="1574" mi="1" ci="0" mb="0" cb="0"/><line nr="1576" mi="4" ci="0" mb="0" cb="0"/><line nr="1579" mi="1" ci="0" mb="0" cb="0"/><line nr="1581" mi="4" ci="0" mb="0" cb="0"/><line nr="1584" mi="1" ci="0" mb="0" cb="0"/><line nr="1586" mi="4" ci="0" mb="0" cb="0"/><line nr="1589" mi="1" ci="0" mb="0" cb="0"/><line nr="1591" mi="4" ci="0" mb="0" cb="0"/><line nr="1594" mi="1" ci="0" mb="0" cb="0"/><line nr="1596" mi="0" ci="4" mb="0" cb="0"/><line nr="1599" mi="1" ci="0" mb="0" cb="0"/><line nr="1601" mi="4" ci="0" mb="0" cb="0"/><line nr="1604" mi="1" ci="0" mb="0" cb="0"/><line nr="1606" mi="4" ci="0" mb="0" cb="0"/><line nr="1609" mi="1" ci="0" mb="0" cb="0"/><line nr="1611" mi="4" ci="0" mb="0" cb="0"/><line nr="1614" mi="1" ci="0" mb="0" cb="0"/><line nr="1616" mi="0" ci="4" mb="0" cb="0"/><line nr="1619" mi="1" ci="0" mb="0" cb="0"/><line nr="1621" mi="4" ci="0" mb="0" cb="0"/><line nr="1624" mi="1" ci="0" mb="0" cb="0"/><line nr="1626" mi="0" ci="4" mb="0" cb="0"/><line nr="1629" mi="1" ci="0" mb="0" cb="0"/><line nr="1631" mi="2" ci="0" mb="0" cb="0"/><line nr="1634" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="666" covered="796"/><counter type="BRANCH" missed="196" covered="76"/><counter type="LINE" missed="233" covered="200"/><counter type="COMPLEXITY" missed="194" covered="65"/><counter type="METHOD" missed="9" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenType.java"><line nr="7" mi="0" ci="324" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="804"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Output.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="15" mb="0" cb="2"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="15" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="15" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="15" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="2"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="9" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="2"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="299"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="63"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DupDetector.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="2" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="8" ci="0" mb="2" cb="0"/><line nr="34" mi="7" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="2" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Recommender.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="15" ci="0" mb="2" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="2" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="10" ci="0" mb="2" cb="0"/><line nr="114" mi="8" ci="0" mb="2" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="10" ci="0" mb="2" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="8" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TokenAnalyzer.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="1" cb="3"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="75"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1108" covered="2018"/><counter type="BRANCH" missed="229" covered="97"/><counter type="LINE" missed="356" covered="378"/><counter type="COMPLEXITY" missed="244" covered="99"/><counter type="METHOD" missed="42" covered="45"/><counter type="CLASS" missed="5" covered="5"/></package><package name="edu/odu/cs/cs350/Interfaces"><class name="edu/odu/cs/cs350/Interfaces/RefactoringInterface" sourcefilename="RefactoringInterface.java"/><class name="edu/odu/cs/cs350/Interfaces/FileInterface" sourcefilename="FileInterface.java"/><class name="edu/odu/cs/cs350/Interfaces/TokenInterface" sourcefilename="TokenInterface.java"/><class name="edu/odu/cs/cs350/Interfaces/OutputInterface" sourcefilename="OutputInterface.java"/><sourcefile name="OutputInterface.java"/><sourcefile name="RefactoringInterface.java"/><sourcefile name="TokenInterface.java"/><sourcefile name="FileInterface.java"/></package><counter type="INSTRUCTION" missed="1108" covered="2018"/><counter type="BRANCH" missed="229" covered="97"/><counter type="LINE" missed="356" covered="378"/><counter type="COMPLEXITY" missed="244" covered="99"/><counter type="METHOD" missed="42" covered="45"/><counter type="CLASS" missed="5" covered="5"/></report>